name: Test

on:
  push:
    branches: [ main ]

env:
  PROJECT_NAME: YouTubeStreamTemplatesCrossPlatform

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - uses: microsoft/setup-msbuild@v1.0.2

      - name: Get the version
        id: version
        run: echo ::set-output name=VERSION::1.8.7
      #        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Change Project Variables
        run: |
          (gc "${{ env.PROJECT_NAME }}\${{ env.PROJECT_NAME }}.csproj") -replace '<OutputType>Exe</OutputType>', '<OutputType>WinExe</OutputType>' | Out-File -encoding ASCII "${{ env.PROJECT_NAME }}\${{ env.PROJECT_NAME }}.csproj"
          (gc "${{ env.PROJECT_NAME }}\${{ env.PROJECT_NAME }}.csproj") -replace '<DisableWinExeOutputInference>true</DisableWinExeOutputInference>', '<DisableWinExeOutputInference>false</DisableWinExeOutputInference>' | Out-File -encoding ASCII "${{ env.PROJECT_NAME }}\${{ env.PROJECT_NAME }}.csproj"
          (gc "Inno Config.iss") -replace '"0.0.0"', '"${{ steps.version.outputs.VERSION }}"' | Out-File -encoding ASCII "Inno Config.iss"

      - name: Paste Client Id and Secret
        run: |
          (gc "YouTubeStreamTemplates\src\LiveStreaming\LiveStreamService.cs") -replace '"CLIENT_ID"', '"${{ secrets.CLIENT_ID }}"' | Out-File -encoding ASCII "YouTubeStreamTemplates\src\LiveStreaming\LiveStreamService.cs"
          (gc "YouTubeStreamTemplates\src\LiveStreaming\LiveStreamService.cs") -replace '"CLIENT_SECRET"', '"${{ secrets.CLIENT_SECRET }}"' | Out-File -encoding ASCII "YouTubeStreamTemplates\src\LiveStreaming\LiveStreamService.cs"

      - name: Get PFX-Cert
        run: |
          $bytes = [Convert]::FromBase64String("${{ secrets.BASE64_ENCODED_PFX }}")
          [IO.File]::WriteAllBytes('developer-cert.pfx', $bytes)
          Import-PfxCertificate -FilePath .\developer-cert.pfx -CertStoreLocation Cert:\CurrentUser\My -Password (ConvertTo-SecureString -String '${{ secrets.PFX_KEY }}' -AsPlainText -Force)

      - name: Publish Trimmed in Profile
        run: msbuild /t:restore,publish -v:m /p:Configuration=Release /p:PublishProfile=PublishSigned /p:PublishDir=..\Publish\bin\trimmed -property:RuntimeIdentifiers=win-x64 -property:RuntimeIdentifier=win-x64

      - name: Clean obj
        run: get-childitem -Include obj -Recurse -force | Remove-Item -Force -Recurse

      - name: Publish Regular
        run: msbuild /t:restore,publish -v:m /p:Configuration=Release /p:PublishProfile=PublishSignedRegular /p:PublishDir=..\Publish\bin\regular -property:RuntimeIdentifiers=win-x64 -property:RuntimeIdentifier=win-x64

      - name: Get Size Regular
        run: '"{0} MB" -f ((Get-ChildItem Publish/bin/regular -Recurse | Measure-Object -Property Length -Sum -ErrorAction Stop).Sum / 1MB)'

      - name: Get Size Trimmed
        run: '"{0} MB" -f ((Get-ChildItem Publish/bin/trimmed -Recurse | Measure-Object -Property Length -Sum -ErrorAction Stop).Sum / 1MB)'