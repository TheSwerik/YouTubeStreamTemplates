name: release unix

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+' # Push events to matching [0-9]+.[0-9]+.[0-9]+, i.e. 1.0.0, 187.753.5

jobs:      
  release:
    if: github.event.base_ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Environment Variables
      run: |
        echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        echo "FILENAME=YouTube StreamTemplates" >> $GITHUB_ENV
              
    - name: Publish Linux
      run: dotnet publish "-p:PublishProfile=$($env:project_name)/$($env:project_name).csproj" -c:Release -o:Publish/linux  -v:m -r:linux-x64 --self-contained:true -p:PublishSingleFile=false -p:PublishTrimmed=true

    - name: Zip Linux
      run: tar -C Publish --exclude=bin/osx -czf "Installer/$FILENAME linux.tar.gz" bin
      
    - name: Publish MacOS
      run: dotnet publish "-p:PublishProfile=$($env:project_name)/$($env:project_name).csproj" -c:Release -o:Publish/mac    -v:m -r:osx-x64 --self-contained:true -p:PublishSingleFile=false -p:PublishTrimmed=true

    - name: Zip MacOS
      run: 7z a "Installer/$FILENAME mac.zip" ./Publish/* -xr!bin/linux
        
    - name: Test
      run: |
        ls
        ls ./Installer
        ls ./Publish

#     - name: Create Release
#       id: create_release
#       uses: actions/create-release@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         tag_name: ${{ github.ref }}
#         release_name: Release ${{ github.ref }}
#         draft: false
#         prerelease: false
    
#     - name: Upload Release Asset
#       id: upload-release-asset
#       uses: actions/upload-release-asset@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         upload_url: ${{ steps.create_release.outputs.upload_url }}  
#         asset_path: ./Installer/RedEye.exe
#         asset_name: RedEye.exe
#         asset_content_type: application/exe
      
    - name: Test Other Release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        prerelease: false
        automatic_release_tag: "latest"
        title: ${{ github.ref }}
        files: |
          ./Installer/$FILENAME mac.zip
          ./Installer/$FILENAME linux.tar.gz
